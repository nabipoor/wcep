pb$tick()
drev <- data.frame( key = s_table1[, j] / s_table1[, j - 1])
pj <- table(left_join(drev, Key, by = "key")[, 2]) / sum(s_table1[, j - 1])
(1 - pj%*%ew[, 2])^(-2)*(t(ew[,2])%*%(diag(pj)- pj%*%t(pj))%*%ew[,2])
}))*apply(s_table, 1, mean)^2 / (dim(s_table)[2])
s <- cumsum(sapply(2:dim(s_table1)[2], function(j){
pb$tick()
drev <- data.frame( key = s_table1[, j] / s_table1[, j - 1])
pj <- table(left_join(drev, Key, by = "key")[, 2]) / sum(s_table1[, j - 1])
(1 - pj%*%ew[, 2])^(-2)*(t(ew[,2])%*%(diag(pj)- pj%*%t(pj))%*%ew[,2])
}))*apply(s_table, 1, mean)^2 / (dim(s_table)[2])
# variance
s_table1 <- data.frame(1, t(s_table))
Key <- data.frame(key = 1 - ew$weight, ev = ew$event)
s <- cumsum(sapply(2:dim(s_table1)[2], function(j){
pb$tick()
drev <- data.frame( key = s_table1[, j] / s_table1[, j - 1])
pj <- table(left_join(drev, Key, by = "key")[, 2]) / sum(s_table1[, j - 1])
(1 - pj%*%ew[, 2])^(-2)*(t(ew[,2])%*%(diag(pj)- pj%*%t(pj))%*%ew[,2])
}))*apply(s_table, 1, mean)^2 / (dim(s_table)[2])
s <- cumsum(sapply(2:dim(s_table1)[2], function(j){
pb$tick()
drev <- data.frame( key = s_table1[, j] / s_table1[, j - 1])
pj <- table(left_join(drev, Key, by = "key")[, 2]) / sum(s_table1[, j - 1])
(1 - pj%*%ew[, 2])^(-2)*(t(ew[,2])%*%(diag(pj)- pj%*%t(pj))%*%ew[,2])
}))*apply(s_table, 1, mean)^2 / (dim(s_table)[2])
s <- cumsum(sapply(2:dim(s_table1)[2], function(j){
#pb$tick()
drev <- data.frame( key = s_table1[, j] / s_table1[, j - 1])
pj <- table(left_join(drev, Key, by = "key")[, 2]) / sum(s_table1[, j - 1])
(1 - pj%*%ew[, 2])^(-2)*(t(ew[,2])%*%(diag(pj)- pj%*%t(pj))%*%ew[,2])
}))*apply(s_table, 1, mean)^2 / (dim(s_table)[2])
pb <- progress_bar$new(
format = "  downloading :Progress [:bar] :percent",
clear = FALSE, total = tot, width = 80)
s <- cumsum(sapply(2:dim(s_table1)[2], function(j){
pb$tick()
drev <- data.frame( key = s_table1[, j] / s_table1[, j - 1])
pj <- table(left_join(drev, Key, by = "key")[, 2]) / sum(s_table1[, j - 1])
(1 - pj%*%ew[, 2])^(-2)*(t(ew[,2])%*%(diag(pj)- pj%*%t(pj))%*%ew[,2])
}))*apply(s_table, 1, mean)^2 / (dim(s_table)[2])
options(error=recover)
str(self)
j=1
drev <- data.frame( key = s_table1[, j] / s_table1[, j - 1])
drev
j=2
drev <- data.frame( key = s_table1[, j] / s_table1[, j - 1])
drev
dim(drev)
pj <- table(left_join(drev, Key, by = "key")[, 2]) / sum(s_table1[, j - 1])
pj
(1 - pj%*%ew[, 2])^(-2)*(t(ew[,2])%*%(diag(pj)- pj%*%t(pj))%*%ew[,2])
function(j){
pb$tick()
drev <- data.frame( key = s_table1[, j] / s_table1[, j - 1])
pj <- table(left_join(drev, Key, by = "key")[, 2]) / sum(s_table1[, j - 1])
(1 - pj%*%ew[, 2])^(-2)*(t(ew[,2])%*%(diag(pj)- pj%*%t(pj))%*%ew[,2])
}
dim(pj)
pj
j
j=2
drev <- data.frame( key = s_table1[, j] / s_table1[, j - 1])
pj <- table(left_join(drev, Key, by = "key")[, 2]) / sum(s_table1[, j - 1])
dim(pj)
str(pj)
str(ew)
pj
str(pj)
str(sa.matrix(pj, ncol=1)
)
str(as.matrix(pj, ncol=1))
d=as.matrix(pj, nrow=1)
str(d)
pj
pj <- as.matrix(table(left_join(drev, Key, by = "key")[, 2]), nrow=1) / sum(s_table1[, j - 1])
lifemat <- matrix(1, nrow = n, ncol = maxtime+1)
tot <- n + maxtime
pb <- progress_bar$new(
format = "  downloading :Progress [:bar] :percent",
clear = FALSE, total = tot, width = 80)
s_table <- sapply(1:n, function(i){
pb$tick()
sapply(2:(maxtime + 1), function(j){
lifemat[i,j] <<- prod(apply(cbind(t(xx[i, ]), ew_h1)[, -2], 1, function(v){
ifelse(v[1] <= j-1, 1-as.numeric(v[2]), 1)}))
})})
# lt <- dim(s_table)[1]
# s_table <- s_table[-lt, ]
out$life_table <- t(s_table)
out$survival_probabilities <- apply(s_table, 1, mean)
dim(x)
out <- list()
class(out) <- "wcep"
evtp_h <- as.character(x1[, 2])
evtm_h <- as.numeric(x1[, 3])
invisible(sapply(ptid_h, function(i) {ind <- which(x1[, 4] == i);
evtp_h[ind] <<- nam(evtp_h[ind])}))
x2 <- data.frame(c1 = x1[, 4], evtp_h, evtm_h = x1[, 3])
# time matrix for each unique event of patients
xx <- x2 %>% spread(evtp_h, evtm_h)
maxtime <- max(x2[, 3])
xx[is.na(xx)] <- maxtime+1
# life table and survival probabilities
names(ew)<-c("event","weight")
ew1 <- data.frame(event = ew[, 1], weight=ew[, 2])
ew_h <- data.frame(cbind(colnames(xx[, -1]), substr(colnames(xx[, -1]), 1,
nchar(colnames(xx[, -1])) - 1)))
colnames(ew_h) <- c("c1", "event")
ne_h <- setdiff(ew_h[, 2], ew[, 1])
ew_h0<- droplevels(ew_h[-which(ew_h$event==ne_h),],exclude=ne_h)
ew_h1 <- left_join(ew_h0, ew1, by="event", stringsAsFactors=FALSE)[, c(1, 3)]
xx <- xx[,-which(colnames(xx) %in% setdiff(colnames(xx), ew_h1[,1]))]
n <- length(ptid_h)
lifemat <- matrix(1, nrow = n, ncol = maxtime+1)
tot <- n + maxtime
pb <- progress_bar$new(
format = "  downloading :Progress [:bar] :percent",
clear = FALSE, total = tot, width = 80)
s_table <- sapply(1:n, function(i){
pb$tick()
sapply(2:(maxtime + 1), function(j){
lifemat[i,j] <<- prod(apply(cbind(t(xx[i, ]), ew_h1)[, -2], 1, function(v){
ifelse(v[1] <= j-1, 1-as.numeric(v[2]), 1)}))
})})
# lt <- dim(s_table)[1]
# s_table <- s_table[-lt, ]
out$life_table <- t(s_table)
out$survival_probabilities <- apply(s_table, 1, mean)
# variance
s_table1 <- data.frame(1, t(s_table))
Key <- data.frame(key = 1 - ew$weight, ev = ew$event)
s <- cumsum(sapply(2:dim(s_table1)[2], function(j){
pb$tick()
drev <- data.frame( key = s_table1[, j] / s_table1[, j - 1])
pj <- as.matrix(table(left_join(drev, Key, by = "key")[, 2]), nrow=1) / sum(s_table1[, j - 1])
(1 - pj%*%ew[, 2])^(-2)*(t(ew[,2])%*%(diag(pj)- pj%*%t(pj))%*%ew[,2])
}))*apply(s_table, 1, mean)^2 / (dim(s_table)[2])
devtools::check()
rm(list = c("n"))
rm(list = c("n"))
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
check_rhub()
devtools::check()
devtools::check()
check_rhub()
pj
pj <- table(left_join(drev, Key, by = "key")[, 2]) / sum(s_table1[, j - 1])
pj
str(pj)
pj <- as.matrix(table(left_join(drev, Key, by = "key")[, 2]), nrow) / sum(s_table1[, j - 1])
pj
t(pj)
pj <- as.matrix(table(left_join(drev, Key, by = "key")[, 2]), nrow=1) / sum(s_table1[, j - 1])
pj
pj <- as.matrix(table(left_join(drev, Key, by = "key")[, 2]), ncol=1) / sum(s_table1[, j - 1])
pj
pj <- as.vector(table(left_join(drev, Key, by = "key")[, 2]), ncol=1) / sum(s_table1[, j - 1])
pj <- as.vector(table(left_join(drev, Key, by = "key")[, 2])) / sum(s_table1[, j - 1])
pj
pj <- asmatrix(as.vector(table(left_join(drev, Key, by = "key")[, 2])), ncol=1) / sum(s_table1[, j - 1])
pj <- as.matrix(as.vector(table(left_join(drev, Key, by = "key")[, 2])), ncol=1) / sum(s_table1[, j - 1])
pj
diag(pj)
as.vactor(pj)
as.vector(pj)
diag(as.vector(pj))
devtools::check()
check_rhub()
(1 - t(ew[, 2])%*%pj)^(-2)*(t(ew[,2])%*%(diag(as.vector(pj))- pj%*%t(pj))%*%ew[,2])
devtools::check()
check_rhub()
t(ew[,2])
pj
t(ew[,2])%8%pj
t(ew[,2])%*%pj
devtools::check()
check_rhub()
devtools::check()
devtools::check()
check_rhub()
devtools::check()
check_rhub()
rhub_check(platform="windows")
check_rhub(platform="windows")
rhub::platforms()
previous_checks <- rhub::list_package_checks(<https://win-builder.r-project.org/ips7Zcz6hi91/00check.log>,
email = "nabipoor@ualberta.ca",
howmany = 4)
previous_checks <- rhub::list_package_checks(https://win-builder.r-project.org/ips7Zcz6hi91/00check.log,
email = "nabipoor@ualberta.ca",
howmany = 4)
previous_checks <- rhub::list_package_checks(https://win-builder.r-project.org/ips7Zcz6hi91/00check.log,
email = "nabipoor@ualberta.ca",
howmany = 4)
previous_checks <- rhub::list_package_checks(https://win-builder.r-project.org/ips7Zcz6hi91/00check.log,
email = "nabipoor@ualberta.ca")
previous_checks <- rhub::list_package_checks(https://win-builder.r-project.org/ips7Zcz6hi91/00check.log,
email = 'nabipoor@ualberta.ca')
rhub::list_package_checks( https://win-builder.r-project.org/ips7Zcz6hi91/00check.log, email = 'nabipoor@ualberta.ca' )
rhub::list_package_checks( https:\\win-builder.r-project.org\ips7Zcz6hi91\00check.log, email = 'nabipoor@ualberta.ca' )
rhub::list_package_checks( <https://win-builder.r-project.org/ips7Zcz6hi91/00check.log>, email = 'nabipoor@ualberta.ca' )
library(rhub)
library(rhub)
rhub::list_package_checks( <https://win-builder.r-project.org/ips7Zcz6hi91/00check.log>, email = 'nabipoor@ualberta.ca' )
validate_email()
check()
check()
21
check()
devtools::check()
check()
ew <- data.frame(event = c('CHF','DTH','SHK','REMI'), weight = c(0.3,1,0.5,0.2))
matrix(t(ew[, 2]), nrow = 1)
pj
matrix(t(ew[, 2]), nrow = 1)%*%pj
sum(ew*pj)
ew
sum(ew[,2]*pj)
devtools::check()
check()
pj
devtools::check()
check()
devtools::check()
devtools::check()
devtools::check()
check()
ew
cat(ew[,2])
pj
cat(pj)
cat(dim(pj))
cat(dim(ew))
cat(dim(ew[,2]))
cat(dim(ew))
cat(dim(ew[,2]))
dim(ew[,2])
ew[,2]
str(ew[,2])
cat(ew)
cat(ew[,2])
check()
check()
cat(" p ")
check()
check()
check()
check()
check()
Key
cat(Key)
cat(Key[,2])
check()
dim(s_table1)
dim(Key)
check()
check()
dim(Key)
dim(s_table1)
check()
check()
drev
dim(drev)
cat(dim(drev))
check()
drev
Key
left_join(drev, Key, by = "key")[, 2])), ncol=1)
left_join(drev, Key, by = "key")
left_join(drev, Key, by = "key")[, 2]
levels(left_join(drev, Key, by = "key")[, 2])
cat(levels(left_join(drev, Key, by = "key")[, 2]))
check()
check()
check()
f<-dplyr::left_join(drev, Key, by = "key")[, 2]
cat(f)
cat(drev)
drev
cat(sum(drev)
)
cat(sum(f))
f
cat(f)
check()
f
pj
cat(pj)
check()
pj
ew
table(dplyr::left_join(drev, Key, by = "key")[, 2])
f<-table(dplyr::left_join(drev, Key, by = "key")[, 2])
cat(pj)
check()
pj
f
ew
pj
table(dplyr::left_join(drev, Key, by = "key")
)
drev
Key
drev
table(dplyr::left_join(drev, Key, by = "key")
)
table(dplyr::left_join(drev, Key, by = "key")[, 2])
dplyr::left_join(drev, Key, by = "key")
dplyr::left_join(drev, Key, by = "key")[, 2]
table(dplyr::left_join(drev, Key, by = "key")[, 2])
f<-dplyr::left_join(drev, Key, by = "key")
cat(f)
cat(vector(f))
f
ble(
f<-table(dplyr::left_join(drev, Key, by = "key")[, 2])
cat(f)
check()
f
ew
f
str(f)
f$chr
f$dimnames
str(f)
f$*
attr(f,"dimnames")
str(attr(f,"dimnames"))
attr(f,"dimnames")[[1]]
check()
Key
Key[,2]
attr(f,"dimnames")[[1]]
ifelse(attr(f,"dimnames")[[1]]==Key[,2],1,0)
f,"dimnames")[[1]]==Key[,2]
attr(f,"dimnames")[[1]]
Key[,2]
u=attr(f,"dimnames")[[1]]
u
u=u[1:3]
u
u==Key[,2]
p<-data.frame(Key[,2],0)
p
head(drev)
head(Key)
unique(drev)
p
p<-data.frame(key=Key[,2],0)
p
u
x=u[1]
x
which(u==x)
is.na(which(u==x))
f
sapply(p,1,function(x){
ifelse(is.na(which(u==x))==FALSE,f[which(u==x)],0)
})
apply(p,1,function(x){
ifelse(is.na(which(u==x))==FALSE,f[which(u==x)],0)
})
cat(x)
which(u==x)
u
x
dim(p)
u
i=1
p[i]
p
p[i,1]
x
u
which(u==p[i,1])
sapply(1:dim(p)[4],function(i){ifelse(is.na(which(u==p[i,1])==FALSE), f[which(u==p[i,1])], 0)})
dim(p)[1]
sapply(1:dim(p)[1],function(i){ifelse(is.na(which(u==p[i,1])==FALSE), f[which(u==p[i,1])], 0)})
sapply(1:dim(p)[1],function(i){ifelse(is.na(which(u==p[i,1]))==FALSE, f[which(u==p[i,1])], 0)})
i=1
which(u==p[i,1])
i=4
which(u==p[i,1])
i=3
which(u==p[i,1])
is.na(which(u==p[i,1]))==FALSE
which(u==p[i,1]))!=integer(0)
which(u==p[i,1])!=integer(0)
which(u==p[i,1])
which(u==p[i,1])!=0
legth(which(u==p[i,1]))!=0
length(which(u==p[i,1]))!=0
sapply(1:dim(p)[1],function(i){ifelse(length(which(u==p[i,1]))!=0, f[which(u==p[i,1])], 0)})
p[,2]<-sapply(1:dim(p)[1],function(i){ifelse(length(which(u==p[i,1]))!=0, f[which(u==p[i,1])], 0)})
p
pj<-p[,2] / sum(s_table1[, j - 1])
pj
ew
uj<- matrix(t(ew[, 2]), nrow=1)%*%pj
uj
0.003+0.01+0.004
pj<-matrix(p[,2] / sum(s_table1[, j - 1]), ncol=1)
pj
uj<- matrix(t(ew[, 2]), nrow=1)%*%pj
uj
f<-table(dplyr::left_join(drev, Key, by = "key")[, 2])
u=attr(f,"dimnames")[[1]]
p<-data.frame(key=Key[,2],0)
p[,2]<-sapply(1:dim(p)[1],function(i){ifelse(length(which(u==p[i,1]))!=0, f[which(u==p[i,1])], 0)})
pj<-matrix(p[,2] / sum(s_table1[, j - 1]), ncol=1)
uj<- matrix(t(ew[, 2]), nrow=1)%*%pj
uj
f
check()
devtools::check()
devtools::check()
data(toyexample)
#event weights
ew <- data.frame(event = c('CHF','DTH','SHK','REMI'), weight = c(0.3,1,0.5,0.2))
res1 <- wcep(toyexample, ew)
str(res1)
res1$survival_probabilities
plot(res1)
#comparing two genders
res2 <- wcep(toyexample, ew, split=TRUE)
plot(res2)
#wilcox and t test
res2$Wilcoxontest
res2$t_test
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
check()
check_rhub()
spell_check()
spell_check()
spell_check()
devtools::check()
devtools::check()
devtools::check()
spell_check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
spell_check()
devtools::release()
check_win_devel()
check_win_devel()
check_win_devel()
library(curl)
library
library(httr)
library(httr)
check_win_devel()
devtools::release()
Sys.which("pdflatex")
Sys.getenv("PATH")
tinytex::install_tinytex()
tinytex::install_tinytex()
library(rmarkdown)
install.packages("rmarkdown")
library(rmarkdown)
rmarkdown::find_pandoc()
tinytex::install_tinytex()
Sys.which('pdflatex')
tinytex::install_tinytex()
Sys.which('pdflatex')
tinytex::parse_install()
library(tinytex)
Sys.which('pdflatex')
data(toyexample)
#event weights
ew <- data.frame(event = c('CHF','DTH','SHK','REMI'), weight = c(0.3,1,0.5,0.2))
res1 <- wcep(toyexample, ew)
str(res1)
res1$survival_probabilities
plot(res1)
#comparing two genders
res2 <- wcep(toyexample, ew, split=TRUE)
plot(res2)
Sys.getenv(“PATH”)
Sys.getenv("PATH")
Sys.setenv(PATH=paste(Sys.getenv("PATH"),"/majidnabipoorsanjeba/texbin",sep=":"))
Sys.which("pdflatex")
Sys.setenv(PATH=paste(Sys.getenv("PATH"),"/majidnabipoorsanjeba/texbin",sep=":"))
Sys.which("pdflatex")
check_win_devel()
use_mit_license()
use_mit_license("Majid Nabipoor, Jeff Bakal, Cindy Westerhout")
devtools::check()
use_news_md()
devtools::check()
devtools::check()
devtools::check()
devtools::on_path("git")
install.packages("tinytex")
library(tinytex)
tinytex::install_tinytex()
Sys.which('pdflatex')
install.packages("tinytex")
q()
