EvTp<-rep("DTH", dim(samp)[1])
for (k in 1:dim(samp)[1]){
if(Ev[k]==1) {EvTp[k]<-"REMI"} else {
if(Ev[k]==2) {EvTp[k]<-"CHF"} else {
if(Ev[k]==3) {EvTp[k]<-"SHK"} else {
if(Ev[k]==5) {EvTp[k]<-"N"}
}
}
}
}
samp[,2]<-as.factor(EvTp)
vwcep<-rbind(vwcep,wcep(samp, ewwcep)$variance)
vtrad<-rbind(vtrad,wcep(samp, ewtrad)$variance)
}
vawcep<-rbind(vawcep,apply(vwcep,2,mean))
vatrad<-rbind(vatrad,apply(vtrad,2,mean))
}
dim(vawcep)
dim(vatrad)
vatrad-vawcep
(vatrad-vawcep)>0
(vatrad-vawcep)>0)[34:40,]
((vatrad-vawcep)>0)[34:40,]
write.csv(vawcep,file=vawcep.csv)
write.csv(vawcep,file="vawcep.csv"")
write.csv(vawcep,file="vawcep.csv")
write.csv(vawcep,file="C:/Users/majidnabipoorsanjeba/Desktop/vawcep.csv")
write.csv(vatrad,file="C:/Users/majidnabipoorsanjeba/Desktop/vatrad.csv")
install.packages("plotly")
library(plotly)
plotly(z=~vawcep)
x<-(1:40)*250
y<-1:30
z<-vawcep
plot_ly(
type = 'surface',
contours = list(
x = list(show = TRUE, start = 0, end = 10000, size = 250, color = 'white'),
z = list(show = TRUE, start = 0, end = 30, size = 1)),
x = ~x,
y = ~y,
z = ~z) %>%
layout(
scene = list(
xaxis = list(nticks = 40),
zaxis = list(nticks = 40),
camera = list(eye = list(x = 0, y = -1, z = 0.5)),
aspectratio = list(x = .9, y = .8, z = 0.2)))
p<-plot_ly(
type = 'surface',
contours = list(
x = list(show = TRUE, start = 0, end = 10000, size = 250, color = 'white'),
z = list(show = TRUE, start = 0, end = 30, size = 1)),
x = ~x,
y = ~y,
z = ~z) %>%
layout(
scene = list(
xaxis = list(nticks = 40),
zaxis = list(nticks = 40),
camera = list(eye = list(x = 0, y = -1, z = 0.5)),
aspectratio = list(x = .9, y = .8, z = 0.2)))
p
p<-plot_ly(
type = 'surface',
contours = list(
x = list(show = TRUE, start = 0, end = 10000, size = 250, color = 'white'),
z = list(show = TRUE, start = 0, end = 30, size = 1)),
x = ~x,
y = ~y,
z = ~z) %>%
layout(
scene = list(
xaxis = list(nticks = 40),
zaxis = list(nticks = 40),
camera = list(eye = list(x = 0, y = -1, z = 0.5)),
aspectratio = list(x = .9, y = .8, z = 0.2)))
p
p
toyexample
d<-toyexample
d[,2]
x=rep(0,104)
ifelse(d[,2]!="N",x=1,0)
ifelse(d[,2]!="N",x<-1,0)
x
x=rep(0,104)
x<-ifelse(d[,2]!="N",1,0)
x
sd(x)
getwd()
devtools::check()
devtools::build_manual(pkg = "wcep")
getwd()
setwd("C:/Users/majidnabipoorsanjeba/Desktop")
devtools::build_manual(pkg = "wcep")
Sys.which("pdflatex")
Sys.getenv("PATH")
$ tlmgr search --global --file "/epstopdf.sty"
tlmgr search --global --file "/epstopdf.sty"
Sys.which("pdflatex")
Sys.getenv("PATH")
Sys.setenv(PATH=paste(Sys.getenv("PATH"),"C:\Users\majidnabipoorsanjeba\AppData\Local\MiKTeX",sep=":"))
Sys.setenv(PATH=paste(Sys.getenv("PATH"),"\Users\majidnabipoorsanjeba\AppData\Local\MiKTeX",sep=":"))
Sys.setenv(PATH=paste(Sys.getenv("PATH"),"C:/Users/majidnabipoorsanjeba/AppData/Local/MiKTeX",sep=":"))
Sys.which("pdflatex")
Sys.which("pdflatex")
Sys.which("pdflatex")
devtools::check()
devtools::build_manual(pkg = "wcep")
setwd("C:\Users\majidnabipoorsanjeba\Desktop")
setwd("C:/Users/majidnabipoorsanjeba/Desktop")
getwd()
devtools::build_manual(pkg = "wcep")
Sys.which("pdflatex")
devtools::check()
devtools::build_manual(pkg = "wcep")
setwd("C:/Users/majidnabipoorsanjeba/Desktop/wcep")
getwd()
devtools::check()
setwd("C:/Users/majidnabipoorsanjeba/Desktop")
devtools::build_manual(pkg="wcep")
devtools::build_manual(pkg="wcep")
Sys.which("pdflatex")
setwd("C:/Users/majidnabipoorsanjeba/Desktop")
devtools::build_manual(pkg = "wcep")                      ")
devtools::build_manual(pkg = "wcep")
devtools::build_manual(pkg = "wcep")
setwd("C:/Users/majidnabipoorsanjeba/Desktop/wcep")
devtools::check()
devtools::check()
devtools::check(manual = TRUE)
setwd("C:/Users/majidnabipoorsanjeba/Desktop")
devtools::build_manual(pkg = "wcep")
devtools::build_manual(pkg = "wcep")
devtools::build_manual(pkg = "wcep")
devtools::build_manual(pkg = "wcep")
devtools::build_manual(pkg = "wcep")
devtools::build_manual(pkg = "wcep")
setwd("C:/Users/majidnabipoorsanjeba/Desktop/wcep")
devtools::check(manual = TRUE)
devtools::check(manual = TRUE)
devtools::build_manual()
? wcep
devtools::build_manual()
getwd()
devtools::check(manual = TRUE)
getwd()
setwd
devtools::build_manual()
devtools::build_manual()
devtools::check(manual = TRUE)
devtools::build_manual()
devtools::check(manual = TRUE)
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::check(manual = TRUE)
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::check(manual = TRUE)
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::check(manual = TRUE)
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::check(manual = TRUE)
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::check(manual = TRUE)
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::check(manual = TRUE)
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::check(manual = TRUE)
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
? wcep
res2 <- wcep(toyexample, ew, split=TRUE)
str(res2)
roxygen2:::package_files()
roxygen2:::package_files('.')
devtools::check(manual = TRUE)
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::check(manual = TRUE)
devtools::build_manual()
devtools::build_manual()
devtools::check(manual = TRUE)
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
desc::desc_get_collate()
devtools::check(manual = TRUE)
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::check(manual = TRUE)
devtools::check(manual = TRUE)
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::check()
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::build_manual()
devtools::check_win_devel()
usethis::use_ttrvis()
usethis::use_travis()
usethis::use_travis()
devtools::check()
devtools::check(check_version = TRUE)
devtools::check()
devtools::check()
file.exists("~/.ssh/id_rsa.pub")
file.exists("~/.ssh/id_rsa.pub")
file.exists("~/.ssh/id_rsa.pub")
file.exists("~/.ssh/id_rsa.pub")
file.exists("~/.ssh/id_rsa.pub")
file.exists("C:/Users/majidnabipoorsanjeba/.ssh/id_rsa.pub")
file.exists("C:/Users/majidnabipoorsanjeba/.ssh/id_rsa.pub")
core.symlinks=true
core.symlinks=TRUE
git config --global --list
config --global --list
config --global --list
git config --global --list
file.exist(k:\ssh/id_rsa.pub)
file.exist(k:/ssh/id_rsa.pub)
file.exist(C:/Users/majidnabipoorsanjeba/Desktop/ssh/id_rsa.pub)
file.exist(C:/Users/majidnabipoorsanjeba/Desktop/ssh/id_rsa.pub"")
file.exist("C:/Users/majidnabipoorsanjeba/Desktop/ssh/id_rsa.pub")
file.exist("C:/Users/majidnabipoorsanjeba/Desktop/wcep/ssh/id_rsa.pub")
file.exist("K:/Analysts/Majid/2019/weighted composite/codes/id_rsa.pub")
file.exists("K:/Analysts/Majid/2019/weighted composite/codes/id_rsa.pub")
git config --global --list
git config --global user.name "MajidNabipoor"
core.symlinks=true
core.symlinks=TRUE
file.exists("K:/Analysts/Majid/2019/weighted composite/codes/.ssh/id_rsa.pub")
core.symlinks=true
core.symlinks=TRUE
file.exists("C:/Users/majidnabipoorsanjeba/.ssh/id_rsa.pub")
git config --global --list
file.exists("C:/Users/majidnabipoorsanjeba/.ssh/id_rsa.pub")
devtools::check()
ls()
setwd(C:\Users\majidnabipoorsanjeba\Desktop\T)
setwd("C:/Users/majidnabipoorsanjeba/Desktop/T")
setwd("C:/Users/majidnabipoorsanjeba/Desktop/T")
load("K:/Analysts/Majid/2019/weighted composite/codes/wcep/.RData")
devtools::check()
devtools::load_all(".")
devtools::load_all(".")
devtools::check()
git branch
devtools::build_manual(pkg = "wcep")
setwd("K:/Analysts/Majid/2019/weighted composite/codes")
devtools::build_manual(pkg = "wcep")
devtools::check()
setwd("K:/Analysts/Majid/2019/weighted composite/codes/wcep")
devtools::check()
devtools::build(pkg = "wcep")
getwd()
devtools::build()
devtools::check()
devtools::check()
usethis::use_travis()
devtools::check()
devtools::revdep_check()
devtools::revdep()
devtools::revdep_check()
devtools::revdep()
devtools::check()
devtools::revdep()
devtools::revdep(wcep)
devtools::revdep("wcep")
devtools::revdep_check()
use_revdep()
available.packages()
x<-available.packages()
package.dependencies(x, check = TRUE, depLevel = c("Depends", "Imports")
)
install.packages('tools')
library(tools)
package.dependencies(x, check = TRUE, depLevel = c("Depends", "Imports"))
package.dependencies(x, check = TRUE, depLevel = c("Depends"))
package_dependencies(x, check = TRUE, depLevel = c("Depends"))
package_dependencies(x, check = TRUE, depLevel = "Depends")
getDependencies(wcep,
dependencies = c("Depends", "Imports", "LinkingTo"),
installed=TRUE,
available=TRUE,
base=FALSE,
recommended=FALSE)
install.packages("gtools")
library(gtools)
getDependencies(wcep,
dependencies = c("Depends", "Imports", "LinkingTo"),
installed=TRUE,
available=TRUE,
base=FALSE,
recommended=FALSE)
getDependencies('wcep',
dependencies = c("Depends", "Imports", "LinkingTo"),
installed=TRUE,
available=TRUE,
install.packages(Rtools)
install.packages(Rtool)
install.packages("Rtools")
library(devtools)
library(usethis)
library(devtools)
library(Rtools)
data(toyexample)
#event weights
ew <- data.frame(event = c('CHF','DTH','SHK','REMI'), weight = c(0.3,1,0.5,0.2))
res1 <- wcep(toyexample, ew)
library(wcep)
load_all()
library(wcep)
library(usethis)
library(devtools)
load_all()
library(wcep)
data(toyexample)
#event weights
ew <- data.frame(event = c('CHF','DTH','SHK','REMI'), weight = c(0.3,1,0.5,0.2))
res1 <- wcep(toyexample, ew)
str(res1)
res1$survival_probabilities
plot(res1)
#comparing two genders
res2 <- wcep(toyexample, ew, split=TRUE)
plot(res2)
#wilcox and t test
res2$Wilcoxontest
res2$t_test
use_git_config(user.name = "nabipoor", user.email = "nabipoor@ualberta.ca")
devtools::check()
devtools::check()
library(usethis)
library(devtools)
devtools::install_github("nabipoor/wcep")
devtools::install_github("nabipoor/wcep")
